const m={id:"id",children:"children",pid:"pid"},y={children:"children",label:"name",value:"id",isLeaf:"leaf",emitPath:!1},f=r=>Object.assign({},m,r),A=(r,t={})=>{t=f(t);const{children:i}=t,e=[...r];for(let n=0;n<e.length;n++)e[n][i]&&e.splice(n+1,0,...e[n][i]);return e},b=(r,t,i={})=>{i=f(i);const e=[],n=[...r],o=new Set,{children:s}=i;for(;n.length;){const c=n[0];if(o.has(c))e.pop(),n.shift();else if(o.add(c),c[s]&&n.unshift(...c[s]),e.push(c),t(c))return e}return null},v=(r,t,i={})=>{const e=(i=f(i)).children;return function n(o){return o.map(s=>({...s})).filter(s=>(s[e]=s[e]&&n(s[e]),t(s)||s[e]&&s[e].length))}(r)},O=(r,t)=>r.map(i=>p(i,t)),p=(r,{children:t="children",conversion:i})=>{const e=Array.isArray(r[t])&&r[t].length>0,n=i(r)||{};return e?{...n,[t]:r[t].map(o=>p(o,{children:t,conversion:i}))}:{...n}},g=(r,t,i={})=>{r.forEach(e=>{const n=t(e,i)||e;e.children&&g(e.children,t,n)})},S=(r,t,i,e)=>{if(!Array.isArray(r))return[];const n=t||"id",o=i||"parentId",s="children",c={},a={},h=[];for(const l of r){const d=l[o];c[d]==null&&(c[d]=[]),a[l[n]]=l,c[d].push(l)}for(const l of r)a[l[o]]==null&&h.push(l);for(const l of h)u(l);function u(l){if(c[l[n]]!==null&&(l[s]=c[l[n]]),l[s])for(const d of l[s])u(d)}return h},I=(r,t,i,e,n)=>{t=t||"id",i=i||"parentId",n=n||Math.min(...r.map(c=>c[i]))||0;const o=JSON.parse(JSON.stringify(r)),s=o.filter(c=>{const a=o.filter(h=>c[t]===h[i]);return a.length>0&&(c.children=a),c[i]===n});return s!==""?s:r};export{I as a,b,A as c,y as d,g as e,v as f,S as h,O as t};
